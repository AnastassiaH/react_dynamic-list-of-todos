{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoItem","todo","showModal","selectedTodoId","className","id","completed","title","type","onClick","TodoList","todosToShow","map","TodoFilter","setTodosToShow","todos","useState","filteredByComplete","setFilteredByComplete","selectValue","setSelectValue","query","setQuery","Date","now","queryChangeTime","setQueryChangeTime","useEffect","filterByQuery","value","filter","toLowerCase","includes","onQueryChange","length","onStatusChange","isCompleted","filterByCompleted","onChange","e","target","placeholder","style","pointerEvents","Loader","TodoModal","author","isLoading","closeModal","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","setTodos","selectedTodo","setSelectedTodo","setAuthor","todosLoading","setTodosLoading","modalOpen","setModalOpen","modalLoading","setModalLoading","todosFromServer","userId","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd5245f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  showModal: (todo: Todo) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  showModal,\n  selectedTodoId,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      className=\"\"\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span data-cy=\"iconCompleted\" className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => showModal(todo)}\n        >\n          <span className=\"icon\">\n            <i className={`far fa-eye${todo.id === selectedTodoId ? '-slash' : ''}`} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todosToShow: Todo[],\n  showModal: (todo: Todo) => void,\n  selectedTodoId: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todosToShow,\n  showModal,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todosToShow.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            showModal={showModal}\n            selectedTodoId={selectedTodoId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodosToShow: (cb: (value: Todo[]) => Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setTodosToShow, todos }) => {\n  const [filteredByComplete, setFilteredByComplete] = useState(todos);\n  const [selectValue, setSelectValue] = useState('all');\n  const [query, setQuery] = useState('');\n  const [queryChangeTime, setQueryChangeTime] = useState(Date.now());\n\n  useEffect(() => {\n    setFilteredByComplete(() => todos);\n  }, [todos]);\n\n  useEffect(() => {\n    setTodosToShow(() => filteredByComplete);\n  }, [filteredByComplete]);\n\n  const filterByCompleted = (isCompleted: string) => {\n    switch (isCompleted) {\n      case 'all':\n        setFilteredByComplete(() => todos);\n\n        break;\n      case 'active':\n        setFilteredByComplete(\n          () => todos.filter((todo: Todo) => !todo.completed),\n        );\n\n        break;\n      case 'completed':\n        setFilteredByComplete(\n          () => todos.filter((todo: Todo) => todo.completed),\n        );\n        break;\n      default:\n    }\n  };\n\n  const filterByQuery = (value: string) => {\n    setTodosToShow(() => filteredByComplete\n      .filter((todo: Todo) => todo.title.toLowerCase()\n        .includes(value.toLowerCase())));\n  };\n\n  const onQueryChange = (value: string) => {\n    if (value.length < query.length) {\n      filterByQuery(value);\n    }\n\n    setQueryChangeTime(Date.now());\n    setQuery(() => value);\n\n    if (Date.now() - queryChangeTime > 1000) {\n      return;\n    }\n\n    filterByQuery(value);\n  };\n\n  const onStatusChange = (value: string) => {\n    setQuery('');\n    setSelectValue(value);\n    filterByCompleted(value);\n  };\n\n  const onCloseClick = () => {\n    onQueryChange('');\n    setFilteredByComplete(todos);\n    setSelectValue('all');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectValue}\n            onChange={(e) => onStatusChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={e => onQueryChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => onCloseClick()}\n              />\n            </>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  author?: User,\n  isLoading: boolean,\n  closeModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  author,\n  isLoading,\n  closeModal,\n\n}) => (\n  <div className=\"modal is-active\" data-cy=\"modal\">\n    <div className=\"modal-background\" />\n\n    {isLoading ? (\n      <Loader />\n    ) : (\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            {`Todo #${todo.id}`}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => closeModal()}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todo.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            <strong\n              className={`has-text-${todo.completed ? 'success' : 'danger'}`}\n            >\n              {todo.completed ? 'Done' : 'Planned'}\n            </strong>\n\n            {' by '}\n\n            <a href={`mailto:${author?.email}`}>\n              {author?.name}\n            </a>\n          </p>\n        </div>\n      </div>\n    )}\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToShow, setTodosToShow] = useState<Todo[]>(todos);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>(todos[0]);\n  const [author, setAuthor] = useState<User>();\n  const [todosLoading, setTodosLoading] = useState(true);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n\n  useEffect(() => {\n    getTodos().then((todosFromServer: Todo[]) => {\n      setTodos(() => todosFromServer);\n      setTodosLoading(false);\n    });\n  }, []);\n\n  const showModal = (todo: Todo) => {\n    setModalLoading(true);\n    setModalOpen(true);\n    setSelectedTodo(todo);\n    getUser(todo.userId).then((user: User) => {\n      setAuthor(user);\n      setModalLoading(false);\n    });\n  };\n\n  const closeModal = () => {\n    setModalLoading(false);\n    setModalOpen(false);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setTodosToShow={setTodosToShow}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todosLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todosToShow={todosToShow}\n                    showModal={showModal}\n                    selectedTodoId={\n                      modalOpen ? selectedTodo?.id : -1\n                    }\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {modalOpen\n      && (\n        <TodoModal\n          closeModal={closeModal}\n          todo={selectedTodo}\n          author={author}\n          isLoading={modalLoading}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}